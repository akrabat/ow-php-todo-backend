# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ow-php-todo-backend

# Please ensure the serverless-openwhisk provider plugin is installed globally.
# $ npm install -g serverless-openwhisk
# ...before installing project dependencies to register this provider.
# $ npm install
provider:
  name: openwhisk
  runtime: php

# you can add packaging information here
package:
  individually: true
  exclude:
     - "*"
  include:
     - "vendor/**"
     - "src/actions/*"
     - "src/Todo/*"
     - "src/AppContainer.php"

functions:

  create-schema:
    handler: src/actions/createSchema.main
    name: "todo-backend/create-schema"

  root:
    handler: src/actions/root.main
    name: "todo-backend/root"
    events:
      - http:
          path: /
          method: get
          resp: http
    package:
      include:
        - src/actions/main.php

  list-todos:
    handler: src/actions/listTodos.main
    name: "todo-backend/list-todos"
    events:
      - http:
          path: /todos
          method: get
          resp: http

  add-todo:
    handler: src/actions/addTodo.main
    name: "todo-backend/add-todo"
    annotations:
        raw-http: true
    events:
      - http:
          path: /todos
          method: post
          resp: http

  delete-all-todos:
    handler: src/actions/deleteAllTodos.main
    name: "todo-backend/delete-all-todos"
    annotations:
        raw-http: true
    events:
      - http:
          path: /todos
          method: delete
          resp: http

  show-todo:
    handler: src/actions/showTodo.main
    name: "todo-backend/show-todo"
    annotations:
        raw-http: true
    events:
      - http:
          path: /todos/{id}
          method: get
          resp: http

  edit-todo:
    handler: src/actions/editTodo.main
    name: "todo-backend/edit-todo"
    annotations:
        raw-http: true
    events:
      - http:
          path: /todos/{id}
          method: patch
          resp: http

  delete-todo:
    handler: src/actions/deleteTodo.main
    name: "todo-backend/delete-todo"
    annotations:
        raw-http: true
    events:
      - http:
          path: /todos/{id}
          method: delete
          resp: http


#    Functions can be defined using sequences rather than referring 
#    to a handler.
#    sequence:
#      - parse_input
#      - do_some_algorithm
#      - construct_output

#    The following are a few example events you can configure
#    Check the event documentation for details
#    events:
#      - http: GET /api/users/create
#      - trigger: trigger_name


# extend the framework using plugins listed here:
# https://github.com/serverless/plugins
plugins:
  - serverless-openwhisk

# you can define custom triggers and trigger feeds using the resources section.
#
#resources:
#  triggers:
#    my_trigger:
#      parameters: 
#        hello: world    
#    alarm_trigger:
#      parameters: 
#        hello: world
#     feed: /whisk.system/alarms/alarm
#     feed_parameters: 
#       cron: '*/8 * * * * *'
